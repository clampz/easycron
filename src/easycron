#!/bin/bash

# easycron.sh by David Weinman <david@weinman.com>
#
# This file is licensed under the Do what the fuck you want to Public License
# (DWTFYWTPL).  See LICENSE for details.

#if there's no args, print usage
if [ -z "$1" ]; then
  echo "Usage: $0 <time interval> <executable file OR bash code>"
  exit
fi

#copy the current cron table
crontab -l > mycron.txt

# initialize time specifications to wild card
min="*"
hour="*"
dom="*"
mon="*"
dow="*"

# if the first arg is delete option, then look for a pattern to delete.
if [ "$1" == "-d" ]; then
  sed "/$2/d" mycron.txt > tmp && mv tmp mycron.txt
  crontab mycron.txt

# if the first arg is a list option, then cat the cron table
elif [ "$1" == "-l" ]; then
  cat mycron.txt

# else it must be a process with some number of time specification
else
  for arg in "$@"
  do
    case $arg in

      "every odd day" ) min="00"; hour="00"; dom="1-31/2";;
      "every even day" ) min="00"; hour="00"; dom="1-30/2";;
      *midnight ) min="00"; hour="00";; 
      *min ) min="${arg%min}";;
      *hr ) hour="${arg%%hr}";;
      *d ) dom="${arg%%d}";;
      *mo ) mon="${arg%%mo}";;
      *dow ) dow="${arg%%dow}";;
    esac
  done
  echo "$min $hour $dom $mon $dow ${@: -1}" >> mycron.txt
  crontab mycron.txt
fi

# some examples of cool usage might be:
# easycron "every other monday at noon" /path/to/exec
# easycron "every other monday at noon and every thursday at 1p" /path/to/exec

# remove my copy of the cron table
rm mycron.txt

